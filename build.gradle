plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'team.backend'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

def querydslDir = "$buildDir/generated/querydsl" // Q파일 생성 경로 지정

sourceSets {
	main.java.srcDirs += querydslDir
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' //swagger 관련 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-mail' // 메일 전송 관련 의존성 추가

	//QueryDSL

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // QueryDSL 핵심 의존성
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
	delete file(querydslDir)
}